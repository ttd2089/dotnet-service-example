services:
  app:
    restart: "no"
    build:
      dockerfile: Dockerfile.Api
      context: .
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - STARTUPCONFIG__MIGRATEDATABASE=false
    - CONNECTIONSTRINGS__DEFAULT=Host=postgres;Port=5432;Database=things-db;Username=things-app;Password=p4ssw0rd
    ports:
    - 8080:80
  postgres:
    restart: "no"
    image: postgres:15.1
    environment:
    - POSTGRES_USER=things-app
    - POSTGRES_PASSWORD=p4ssw0rd
    - POSTGRES_DB=things-db
    ports:
    - 5432:5432
  migrations:
    build:
      dockerfile: Dockerfile.Migrations
      context: .
    environment:
    - PGHOST=postgres
    - PGPORT=5432
    - PGDATABASE=things-db
    - PGUSER=things-app
    - PGPASSWORD=p4ssw0rd
  kafka:
    restart: "no"
    image: bitnami/kafka:3.1.2
    environment:
    - BITNAMI_DEBUG=yes
    - KAFKA_ENABLE_KRAFT=yes
    - KAFKA_KRAFT_CLUSTER_ID=gQkDzQvzQPyiJEqkMZbHHw
    - KAFKA_BROKER_ID=1
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_LISTENERS=EXTERNAL://:9092,INTERNAL://:9093,CONTROLLER://:9095
    - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    - KAFKA_CFG_ADVERTISED_LISTENERS=EXTERNAL://localhost:9092,INTERNAL://kafka:9093
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9095
    ports:
    - 9092:9092
  pgweb:
    # pgweb will fail if it comes up before the database
    restart: on-failure
    image: sosedoff/pgweb
    environment:
    - DATABASE_URL=postgres://things-app:p4ssw0rd@postgres:5432/things-db?sslmode=disable
    ports:
    - 8432:8081
